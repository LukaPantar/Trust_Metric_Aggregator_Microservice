services:
  # Your Trust Metric Aggregator Microservice
  aggregator:
    build:
      context: . # Build the image from the Dockerfile in the current directory
      dockerfile: Dockerfile # Specify the Dockerfile name explicitly (though 'Dockerfile' is default)
    container_name: trust_aggregator_microservice
    # Map host port 8000 to container port 8000 (adjust if your FastAPI app uses a different port)
    # This allows you to access the FastAPI app from your host machine at http://localhost:8000
    ports:
      - "8000:8000"
    env_file: ".env"
    depends_on:
      - db # Ensures the database container starts before the aggregator
    networks:
      - trust_network # Connects to the custom network

  # PostgreSQL Database Service
  db:
    image: postgres:16-alpine # Using a lightweight Alpine-based PostgreSQL image
    container_name: trust_aggregator_db
    env_file: ".env"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data using a named volume
      # Mount the initialization script. Docker will execute it on first run when the volume is empty.
      #- ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    # Expose PostgreSQL port to host (optional for internal communication, but useful for pgAdmin or local tools)
    ports:
      - "5432:5432"
    networks:
      - trust_network # Connects to the custom network

volumes:
  postgres_data: # Define the named volume for data persistence

networks:
  trust_network:
    external: true